;;blurb | title
;;      | content
;;      | author
;;      | jox [joxadecimal id _ see specsheet]

;;brief | content || functionally the same as blurbs,  just shorter
;;      | author

;;comment | content
;;        | author

;;tag  | value
;;     | author
;;     | blurb-eid (or brief-eid or comment-eid)
;;     | verifier
;;     
;;participation |
;;              | value
;;              | bequeather
;;              | recipient
;;              | entity

;;similarity |
;;           | value [0, 1]
;;           | bids [exactly 2 bids],


[
;;blurbs
{:db/id #db/id[:db.part/db]
 :db/ident :blurb/content
 :db/valueType :db.type/string
 :db/cardinality :db.cardinality/one
 :db/doc "Content of a blurb"
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db]
 :db/ident :blurb/author
 :db/valueType :db.type/ref
 :db/cardinality :db.cardinality/one
 :db/doc "Blurb author.  reference to auth/email"
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db]
 :db/ident :blurb/title
 :db/valueType :db.type/string
 :db/cardinality :db.cardinality/one
 :db/doc "Title of a blurb"
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db]
 :db/ident :tag/author
 :db/valueType :db.type/ref
 :db/cardinality :db.cardinality/one
 :db/doc "author of a tag"
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db]
 :db/ident :blurb/rating
 :db/valueType :db.type/long
 :db/cardinality :db.cardinality/one
 :db/doc "rating applied to this particular blurb"
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db]
 :db/ident :rating/author
 :db/valueType :db.type/ref
 :db/cardinality :db.cardinality/one
 :db/doc "person who submitted this rating"
 :db.install/_attribute :db.part/db}

;{:db/id #db/id[:db.part/db]
; :db/ident :blurb/jox
; :db/valueType :db.type/long
; :db/cardinality :db.cardinality/one
; :db/doc "joxadecimal id for easy reference to this blurb"
; :db.install/_attribute :db.part/db}

;;briefs
{:db/id #db/id[:db.part/db]
 :db/ident :brief/content
 :db/valueType :db.type/string
 :db/cardinality :db.cardinality/one
 :db/doc "Content of a brief"
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db]
 :db/ident :brief/title
 :db/valueType :db.type/string
 :db/cardinality :db.cardinality/one
 :db/doc "Title of a brief"
 :db.install/_attribute :db.part/db}

;;comments
{:db/id #db/id[:db.part/db]
 :db/ident :comment/content
 :db/valueType :db.type/string
 :db/cardinality :db.cardinality/one
 :db/doc "Comment content"
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db]
 :db/ident :comment/author
 :db/valueType :db.type/string
 :db/cardinality :db.cardinality/one
 :db/doc "author of the content, tag, or rating of a comment"
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db]
 :db/ident :comment/parent
 :db/valueType :db.type/ref
 :db/cardinality :db.cardinality/one
 :db/doc "which blurb the comment corresponds to, or which comment"
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db]
 :db/ident :author/email
 :db/valueType :db.type/string
 :db/cardinality :db.cardinality/one
 :db/doc "author of the content, tag, or rating of a comment"
 :db.install/_attribute :db.part/db}

;;;references to align new entities of tags and ratings
;;; with their corresponding blurbs/comments/briefs via new EIDs.


;;tags
{:db/id #db/id[:db.part/db]
 :db/ident :tag/value
 :db/valueType :db.type/string
 :db/cardinality :db.cardinality/many
 :db/doc "tag applied to either a blurb, a brief, or comment"
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db]
 :db/ident :tag/blurb
 :db/valueType :db.type/ref
 :db/cardinality :db.cardinality/one
 :db/doc "tag reference to blurb EID (so you know what this tag points to)"
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db]
 :db/ident :tag/brief
 :db/valueType :db.type/ref
 :db/cardinality :db.cardinality/one
 :db/doc "tag reference to brief EID (so you know what this tag points to)"
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db]
 :db/ident :tag/comment
 :db/valueType :db.type/ref
 :db/cardinality :db.cardinality/one
 :db/doc "tag reference to comment EID (so you know what this tag points to)"
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db]
 :db/ident :rating/blurb
 :db/valueType :db.type/ref
 :db/cardinality :db.cardinality/one
 :db/doc "rating reference to blurb, = this rating applies to this blurb"
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db]
 :db/ident :rating/brief
 :db/valueType :db.type/ref
 :db/cardinality :db.cardinality/one
 :db/doc "rating reference to brief, = this rating applies to this blurb"
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db]
 :db/ident :rating/comment
 :db/valueType :db.type/ref
 :db/cardinality :db.cardinality/one
 :db/doc "rating reference to comment, = this rating applies to this blurb"
 :db.install/_attribute :db.part/db}

;;rating vals (++ / + / -) (double plus, plus, needs work)
{:db/id #db/id[:db.part/db]
 :db/ident :rating/value
 :db/valueType :db.type/ref
 :db/cardinality :db.cardinality/one
 :db/doc "rating applied to this particular blurb"
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db]
 :db/ident :rating/val
 :db/valueType :db.type/string
 :db/cardinality :db.cardinality/one
 :db/doc "rating applied to this particular blurb"
 :db.install/_attribute :db.part/db}


;participation/value
;participation/receiver {ref}
;participation/giver {ref}
;participation/entity (blurb, brief, comment or tag)

{:db/id #db/id[:db.part/db] 
 :db/ident :participation/value
 :db/valueType :db.type/string
 :db/cardinality :db.cardinality/many
 :db/doc "participation points somebody got."
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db] 
 :db/ident :participation/receiver
 :db/valueType :db.type/ref
 :db/cardinality :db.cardinality/one
 :db/doc "{reference} to the participation point receiver [author/email] = ?aid "
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db] ;currently unused
 :db/ident :participation/giver
 :db/valueType :db.type/ref
 :db/cardinality :db.cardinality/one
 :db/doc "{reference} to the participation point giver [author/email] = ?aid "
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db]
 :db/ident :participation/entity
 :db/valueType :db.type/ref
 :db/cardinality :db.cardinality/one
 :db/doc "{reference} to the entity (blurb, brief, comment, or tag) that caused this change in participation points "
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db] 
 :db/ident :participation/recipient
 :db/valueType :db.type/string
 :db/cardinality :db.cardinality/one
 :db/doc "the email of the participation point recipient"
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db] 
 :db/ident :participation/bequeather
 :db/valueType :db.type/string
 :db/cardinality :db.cardinality/one
 :db/doc "the email of the participation point recipient"
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db] 
 :db/ident :tag/verifier  ;;deprecated do not use :D ... relies soley on participation values and that makes it more robust!
 :db/valueType :db.type/string
 :db/cardinality :db.cardinality/one
 :db/doc "the email of the tag verifier"
 :db.install/_attribute :db.part/db}

{:db/id #db/id[:db.part/db] 
 :db/ident :account/verified
 :db/valueType :db.type/boolean
 :db/cardinality :db.cardinality/one
 :db/doc "true if account email has been added to db"
 :db.install/_attribute :db.part/db}


]
;;todo [written march 24, 2015)
;; author/participation (a number)
;; author/email (already there woo)
;; author/participation-log 
   ;; updates on some eventis:
   ;; tags | posts | comments



;;tags are their own entity
;; blurbs
;; ratings
;; users

;;also: comments, briefs



;;future work: 
;; tag similarity matrix
;; article datoms [compiled blurb/brief sets]
;; 


